//detect loop in a linkedlist
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    struct Node* next;
    Node(int data){
        this->data = data;
        this->next = next;
    }
};

struct LinkedList{
    Node* head;
    LinkedList(){head = NULL;}
    bool detectLoop(Node* head){
        Node* slow = head;
        Node* fast = head;
        while(slow && fast && fast->next){
            slow=slow->next;
            fast = fast->next->next;
            if(slow==fast)
                return true;
        }
        return false;
    }
    void push(Node** head, int data){
        Node* temp = new Node(data);
        temp->next = *head;
        *head = temp;
    }
    void print(Node* head){
        Node* temp = head;
        while(temp!=NULL){
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
   Node* head = NULL;    
   
   LinkedList ll;
   ll.push(&head,5);
   ll.push(&head,10);
   ll.push(&head,20);
   ll.push(&head,30);
   ll.push(&head,40);
   
   //creating a loop
   //head->next->next->next->next = head->next;
   
   if(ll.detectLoop(head))
    cout << "loop detected" << endl;
   else
    cout << "No loop found" <<endl;
    return 0;
}