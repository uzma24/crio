#include<bits/stdc++.h>
using namespace std;
struct Node{
    int data;
    Node* next;
    Node(int data){
        this->data = data;
        this->next = NULL;
    }
};

struct LinkedList{
    Node* head;
    LinkedList(){head = NULL;}
    void print(Node* head){
        Node* temp = head;
        while(temp!=NULL){
            cout << temp->data << " ";
            temp= temp->next;
        }
        cout << endl;
    }
    void push(Node** head, int data){
        Node* temp = new Node(data);
        temp->next = *head;
        *head = temp;
    }
    Node* detectLoop(Node* head){
        Node* slow = head;
        Node* fast = head;
        while(slow && fast && fast->next){
            slow = slow->next;
            fast = fast->next->next;
            if(slow==fast){
                cout << "loop detected"<< endl;
                return slow;
            }
        }
        return NULL;
    }
    
    void removeLoop(Node* slow, Node* head){
        Node* fast = head;
        while(slow && fast){
            if(slow->next == fast->next){
                slow->next = NULL;
                break;
            }
            slow=slow->next;
            fast = fast->next;
        }
    }
};
int main(){
    Node* head = NULL;
    LinkedList ll;
    ll.push(&head,5);
    ll.push(&head,10);
    ll.push(&head,20);
    ll.push(&head,30);
    ll.push(&head,40);
   
   //creating a loop
   head->next->next->next->next->next = head->next;

    Node* slow = ll.detectLoop(head);
    ll.removeLoop(slow,head);
    ll.print(head);
    return 0;
}